def parse_log(file_path):  
    jump_lines_by_cpu = {}  

    # 从文件读取内容  
    with open(file_path, 'r') as file:  
        log_lines = file.readlines()  
    
    # 处理日志，分组  
    for line in log_lines:  
        line = line.strip()  # 去除行首尾空白字符  
        if line.startswith("process"):  
            print(line)  # 直接打印 process 行  
            continue  
        
        # 判断 jump it 行并分组  
        if line.startswith("[") and "jump it" in line:  
            # 获取 CPU 信息（从行中提取）  
            cpu_identifier = line.split(",")[4]  
            if cpu_identifier not in jump_lines_by_cpu:  
                jump_lines_by_cpu[cpu_identifier] = []  
            jump_lines_by_cpu[cpu_identifier].append(line)  

    # 按时间戳进行排序并输出结果  
    for cpu in sorted(jump_lines_by_cpu.keys()):  
        # 对分组进行排序  
        sorted_jump_lines = sorted(jump_lines_by_cpu[cpu], key=lambda x: x.split(",")[1])  
        for entry in sorted_jump_lines:  
            print(entry)  

# 指定日志文件路径  
file_path = 'log.txt'  

# 解析日志  
parse_log(file_path)
